{"version":3,"sources":["src_babel/base.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;AACb,MAAM,CAAC,CAAC,YAAY,EAAE,OAAO,CAAC,EAAE,UAAS,IAAI,EAAE,KAAK,EAAE;;AAElD,QAAI,IAAI,GAAG;;AAEP,iBAAS,EAAE,CACP,IAAI,EACJ,KAAK,CACR;;AAED,kBAAU,EAAE,EACX;;;AAGD,uBAAe,EAAE,2BAAW;;;AAGxB,gBAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;;AAEjB,gBAAI,CAAC,cAAc,EAAE,CAAC;;AAEtB,gBAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;AAC7B,gBAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;SAClC;;AAED,wBAAgB,EAAE,4BAAW;AACzB,gBAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;AAC9B,gBAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;SACpC;;AAED,wBAAgB,EAAE,4BAAW;AACzB,gBAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;AAC9B,gBAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;SACpC;;AAED,gCAAwB,EAAE,kCAAS,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE;AACzD,gBAAI,CAAC,OAAO,CAAC,uBAAuB,EAAE,CAAC,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;AAClE,gBAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;SACxE;;;AAGD,sBAAc,EAAE,0BAAW;AACvB,gBAAI,IAAI,GAAG,IAAI,CAAC;;;AAGhB,gBAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAS,QAAQ,EAAE;AACtC,oBAAI,CAAC,WAAW,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;AACjC,iBAAC,CAAC,MAAM,EAAE,CAAC;aACd,CAAC,CAAC;;;AAGH,gBAAI,CAAC,EAAE,CAAC,gEAAgE,EAAE,UAAS,CAAC,EAAE;AAClF,oBAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAS,QAAQ,EAAE;AACtC,wBAAG,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;AACjB,gCAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;qBACzE;iBACJ,CAAC,CAAC;aACN,CAAC,CAAC;SAEN;;;;;AAKD,mBAAW,EAAE,qBAAS,MAAM,EAAE,SAAS,EAAE;AACrC,gBAAI,MAAM,IAAI,SAAS,IAAI,MAAM,KAAK,SAAS,EAAE;AAC7C,oBAAI,CAAC,MAAM,CAAC,SAAS,EAAE;AACnB,0BAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,MAAM,CAAC,CAAC;iBACvD,MAAM;;AAEH,wBAAI,aAAa,GAAG,MAAM,CAAC;AAC3B,2BAAM,aAAa,CAAC,SAAS,IAAI,aAAa,CAAC,SAAS,CAAC,SAAS,EAAE;AAChE,qCAAa,GAAG,aAAa,CAAC,SAAS,CAAC;qBAC3C;AACD,iCAAa,CAAC,SAAS,GAAG,SAAS,CAAC;iBACvC;aACJ;AACD,mBAAO,MAAM,CAAC;SACjB;;KAEJ,CAAC;;AAEF,QAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,WAAW,CAAC,SAAS,CAAC,CAAC;;AAErD,WAAO,IAAI,CAAC;CAEf,CAAC,CAAC","file":"src_babel/base.js","sourcesContent":["'use strict';\ndefine([\"properties\", \"event\"], function(Prop, Event) {\n\n    let Base = {\n\n        behaviors: [\n            Prop,\n            Event\n        ],\n\n        properties: {\n        },\n\n        /***************************** 生命周期 ******************************/\n        createdCallback: function() {\n\n            // 初始化jQuery对象\n            this.$ = $(this);\n\n            this._initBehaviors();\n\n            this.trigger('created.life');\n            this.created && this.created();\n        },\n\n        attachedCallback: function() {\n            this.trigger('attached.life');\n            this.attached && this.attached();\n        },\n\n        detachedCallback: function() {\n            this.trigger('detached.life');\n            this.detached && this.detached();\n        },\n\n        attributeChangedCallback: function(attrName, oldVal, newVal) {\n            this.trigger('attributeChanged.life', [attrName, oldVal, newVal]);\n            this.attributeChanged && this.attributeChanged(attr, oldVal, newVal);\n        },\n\n        /***************************** 初始化behaviors ******************************/\n        _initBehaviors: function() {\n            let self = this;\n\n            /* 将behaviors的行为合并到元素上 */\n            self.behaviors.forEach(function(behavior) {\n                self.chainObject(self, behavior);\n                $.extend();\n            });\n\n            /* 在生命周期的各个阶段初始化behaviors */\n            this.on('created.life attached.life detached.life attributeChanged.life', function(e) {\n                self.behaviors.forEach(function(behavior) {\n                    if(behavior[e.type]) {\n                        behavior[e.type].call(self, Array.prototype.slice.call(arguments, 1));\n                    }\n                });\n            });\n\n        },\n\n        /*\n        * 使object的原型链尾端指向inherited, 拥有inherited的属性和方法\n        */\n        chainObject: function(object, inherited) {\n            if (object && inherited && object !== inherited) {\n                if (!Object.__proto__) {\n                    object = $.extend(Object.create(inherited), object);\n                } else {\n                    // 首先找到object原型链末端\n                    let lastPrototype = object;\n                    while(lastPrototype.__proto__ && lastPrototype.__proto__.__proto__) {\n                        lastPrototype = lastPrototype.__proto__;\n                    }\n                    lastPrototype.__proto__ = inherited;\n                }\n            }\n            return object;\n        }\n\n    };\n\n    Base = Base.chainObject(Base, HTMLElement.prototype);\n\n    return Base;\n\n});\n"]}